1-Configurações iniciais e onde digitar o meu código
	-configurado o ambiente: pastas e arquivos 

2-O que são e como nomear as variáveis
    -variáveis = recipientes, possibilitam o reaproveitamento de código 
    -por convenção, o JS usa o padrão 'camelCase'

3-Variáveis com var e hoisting
    -sempre usar como nome de variável um nome bem descritivo 
    -escopo 
        -local: dentro de chaves, de uma uma função, por exemplo 
        -global: fora de chaves ou de qualquer função 
    -hoisting(içamento): é o termo que define o fato de, o JS permitir chamar uma função, antes mesmo de ela ser declarada, 
        e mesmo assim não causando nenhum problema. Permite atribuir uma valor a uma variável que ainda não 
            foi criada. *HOISTING SÓ PODE OCORRER SE ESTIVER USANDO 'VAR'*

4-Variáveis com let e const
    -recomendado evitar a criação de variáveis usando 'var', sempre priorizar 'let' e 'const' 
    -não é possível chamar uma variavel antes de declara-la se for 'let' ou 'const'
    -'const' não pode ser redeclarada ou  atribuída um novo valor

5-Tipos de dados - Primitivos -Strings e Numbers
    -dados não primitivos = objetos 
    -dados primitivos = strings, number 
        JS não faz distinção de número inteiro ou real 
    
6-Tipos de dados - Primitivos - Booleans
    -dados booleanos = true ou false 
    
7-Tipos de dados - Primitivos - Undefined e Null
    - ... 

8-Tipos de dados - Primitivos - Primitivos também são objetos
    -eles se comportam como objetos 

9-Mudando tipos de dados primitivos 
    -...

10-Conceito da imutabilidade em tipos primitivos
    -...

11-Operadores aritméticos
    -soma, subtração, multiplicação, divisão e resto 
    
12-Operadores de atribuição
    - =, +=, -=, *=, /=, %=

13-Operadores de comparação
    - ==, ===, !=, !==, >, >= etc 

14-Operadores lógicos   
    - && = e / || = ou / ! = negação

15-Condicionais#01
    -sobre as possibilidades de condicionais: if, else if e else 
    -sobre operadores ternários 

16-Condicionais#02
    -explicando a estrutura do switch/case 
    -seria como usar um uma condicional com varios if e else if 

17-Precedência dos operadores 
    -&& tem precendencia sobre o ||, por exemplo. Consultar a tabela completa no MDN 

18-Objetos literal
    -maneira mais simples de se criar um objeto, não se usa o new Object(), por exemplo 
    
19-Objetos - Entendendo a cadeia de protótipos#01 - Object.prototype
    -sobre o uso de prototype 

20-Entendendo a cadeia de protótipos#02 -Constructor e isPrototypeOf
    -...

21-Objetos - Entendendo a cadeia de protótipos#03 - valueOf 
    -...

22-Objetos - Entendendo a cadeia de protótipos#04 - toString 
    -...

23-Objetos - Entendendo a cadeia de protótipos#05 - hasOwnProperty
    -...

24-Objetos - Funções
    -bloco de código com nome reutilizavel em qualquer parte do codigo

25-Objetos - Expressão e declaração de função
    -...

26-Objetos - Objeto literal
    -objeto pode conter arrays (mais de um), juntamente com funções e itens aleatórios
    -pode chamar seus conteudos através do 'dot notation' ou entre cochetes
    
27-Objetos - Propriedades computadas
    -passando dados de dentro de variáveis para dentro de objetos 

28-Objetos - Criando objeto com protótipo específico 
    -...

29-Objetos - Objetos são passados por referência 
    -se dois objetos apontam para o mesmo dado, no momento em que o valor de um for alterado, o do outro também será alterado por referência 

30-Objetos - Copiando propriedades de um objeto 
    -...

31- Objetos - Alterando estados de uma propriedade 
    -maneira de passar parametros diversos de um objeto dentro da próprias declaração 

32-Objetos - Congelando um objeto
    -



